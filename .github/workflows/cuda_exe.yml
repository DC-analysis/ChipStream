name: Build CUDA executable

on:
  push:

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']
        os: [windows-latest]
    env:
      # Display must be available globally for linux to know where xvfb is
      DISPLAY: ":99.0"
      QT_SELECT: "qt6"
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@main
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@main
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup xvfb (Linux)
      if: runner.os == 'Linux'
      run: |
        # Stuff copied wildly from several stackoverflow posts
        sudo apt-get install -y xvfb libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0 libxcb-shape0 libglib2.0-0 libgl1-mesa-dev
        sudo apt-get install '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxrender-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev
        # start xvfb in the background
        sudo /usr/bin/Xvfb $DISPLAY -screen 0 1280x1024x24 &
    - name: Install Python dependencies
      run: |
        # prerequisites
        python -m pip install --upgrade pip wheel
        python -m pip install coverage flake8 pytest
    - name: Install extended dependencies
      run: |
        pip install .[cli,gui,torch]
        pip install -r tests/requirements-full.txt
        pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121
    - name: Build windows executable
      if: runner.os == 'windows'
      working-directory: ./build-recipes
      run: |
        pip install -r win_build_requirements.txt
        pyinstaller -y --log-level=WARN win_ChipStream.spec
        dir
        dir dist
        dir dist\\ChipStream
        # Run the binary (the most simple test)
        dist\\ChipStream\\ChipStream.exe --version
        python win_make_iss.py
        ISCC.exe /Q win_chipstream.iss
    - name: Upload windows executables
      id: uploadBinaryArtifact
      uses: actions/upload-artifact@v4.4.3
      with:
        name: cuda-executables
        path: ./build-recipes/Output/*.exe
